name: Android APK
on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          java-version: '21'

      - name: Detect Flutter project dir
        id: detect
        shell: bash
        run: |
          set -e
          CANDIDATE="$(find "$GITHUB_WORKSPACE" -maxdepth 5 -type f -name pubspec.yaml | head -n1)"
          if [ -z "$CANDIDATE" ]; then
            echo "pubspec.yaml not found within $GITHUB_WORKSPACE" >&2
            exit 1
          fi
          PROJECT_DIR="$(dirname "$CANDIDATE")"
          echo "PROJECT_DIR=$PROJECT_DIR" >> $GITHUB_ENV
          echo "Detected project dir: $PROJECT_DIR"

      - name: Flutter pub get
        working-directory: ${{ env.PROJECT_DIR }}
        run: flutter pub get

      - name: Ensure Android folder exists
        working-directory: ${{ env.PROJECT_DIR }}
        shell: bash
        run: |
          if [ ! -d android ]; then
            echo "android/ not found. Generating Android platform with 'flutter create .'"
            flutter create .
          fi
          ls -la android

      - name: Write android/local.properties (flutter.sdk)
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          echo "flutter.sdk=$(dirname $(dirname $(which flutter)))" > android/local.properties
          cat android/local.properties

      - name: Make gradlew executable
        working-directory: ${{ env.PROJECT_DIR }}/android
        run: chmod +x gradlew || true

      - name: Assemble Release (Gradle)
        working-directory: ${{ env.PROJECT_DIR }}/android
        run: ./gradlew assembleRelease --no-daemon --stacktrace

      - name: List ALL APKs (repo-wide)
        working-directory: ${{ env.PROJECT_DIR }}
        run: |
          echo "=== APKs under project dir ==="
          find . -type f -name "*.apk" -print || true

      - uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: |
            **/*.apk
          if-no-files-found: warn
